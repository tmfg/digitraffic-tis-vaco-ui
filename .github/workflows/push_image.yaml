name: "Build and push to ECR"
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  BuildAndPushImageToECR:
    name: "Build and Push to ECR"
    runs-on: ubuntu-latest
    if: "startsWith(github.event.head_commit.message, 'RELEASE')"

    steps:
      - name: Checkout project files (pull request version)
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Checkout project files (push version)
        uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.OIDC_DEPLOY_ROLE_ARN }}
          aws-region: eu-north-1
          role-duration-seconds: 7200

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'        

      - name: Extract the latest version
        id: latestversion
        env:
          version: ${{ github.event.head_commit.message }} | cut -d' ' -f2
        run: |
          echo "LATESTVERSION=$(echo ${{ github.event.head_commit.message }} | cut -d' ' -f2)" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "digitraffic-tis-ui"
          IMAGE_TAG: ${{ steps.latestversion.outputs.LATESTVERSION }}
        run: |
          echo "Version: ${{ steps.latestversion.outputs.LATESTVERSION }}"
          docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
