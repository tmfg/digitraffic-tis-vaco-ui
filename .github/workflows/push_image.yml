name: "Build and push to ECR"
on:
  workflow_run:
    workflows: [ "Release new version" ]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  BuildAndPushImageToECR:
    name: "Build and Push to ECR"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.OIDC_DEPLOY_ROLE_ARN }}
          aws-region: eu-north-1
          role-duration-seconds: 7200

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version-file: '.java-version'
          distribution: 'temurin'
          cache: maven

      - name: Extract latest npm-generated commit message
        id: commit
        run: echo "message=$(git log --format=%B -n1)" >> $GITHUB_OUTPUT

      - name: Extract CURRENT version from the commit message
        # expected commit message format e.g.: "1.0.5 [skip ci]"
        id: version
        run: |
          echo "version=$('${{steps.commit.outputs.message}} | awk '{print $1}' )" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "digitraffic-tis-vaco-ui"
          IMAGE_TAG: ${{ steps.version.outputs.version }}
        run: |
          docker build . -t $IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
